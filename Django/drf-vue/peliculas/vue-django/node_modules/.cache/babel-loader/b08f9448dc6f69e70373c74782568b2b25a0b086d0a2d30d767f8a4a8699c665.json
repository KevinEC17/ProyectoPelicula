{"ast":null,"code":"import axios from 'axios';\nimport { ref } from 'vue';\nexport default {\n  __name: 'LoginComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref(null);\n    const password = ref(null);\n    const errors = ref({\n      username: null,\n      password: null,\n      wrong_credentials: null\n    });\n    const valid = ref(true);\n    const isValidForm = () => {\n      if (!username.value) {\n        errors.username.value = \"Este campo no puede estar en blanco\";\n      } else {\n        errors.username.value = \"\";\n      }\n      if (!password.value) {\n        errors.password.value = \"Este campo no puede estar en blanco\";\n      } else {\n        errors.password.value = \"\";\n      }\n      if (errors.username.value || errors.password.value) {\n        valid.value = false;\n      }\n      return valid.value;\n    };\n\n    /*    const submitForm = () => {\r\n            if(isValidForm()){\r\n                axios.post('http://127.0.0.1:8000/login/', {username: username.value, password: password.value})\r\n                .then(response => {\r\n                    $store.commit('setToken', response.data);\r\n                    username.value = \"\";\r\n                    password.value = \"\";\r\n                    $router.push('/');\r\n                        })\r\n                        .catch(error => {\r\n                            if(error.response.data.non_field_errors) {\r\n                                errors.wrong_credentials.value = error.response.data.non_field_errors.join('');\r\n                            }\r\n                            else{\r\n                                errors.wrong_credentials.value = \"\";\r\n                            }\r\n                        })\r\n                    }\r\n        }\r\n    */\n\n    const __returned__ = {\n      username,\n      password,\n      errors,\n      valid,\n      isValidForm,\n      get axios() {\n        return axios;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ref","username","password","errors","wrong_credentials","valid","isValidForm","value"],"sources":["C:/Users/Usuario/Desktop/Django/drf-vue/peliculas/vue-django/src/components/LoginComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"d-flex container-fluid rounded-3 mt-4 justify-content-center align-items-center\" style=\"background-color:#ED6A5A; height:38rem\">\r\n        <div class=\"d-flex rounded-5 m-5 justify-content-center align-items-center\" style=\"background-color:#F4F1BB; width: 27rem; height:27rem\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/306/306337.png\" style=\"width: 18rem; height: 18rem\" />\r\n        </div>\r\n        <form @submit.prevent=\"submitForm\" class=\"d-flex container justify-content-center align-items-center flex-column m-5 rounded-5\"  style=\"background-color:#F4F1BB; width: 34rem\">\r\n            <!--{% csrf_token %}-->\r\n            <h1 class=\"mb-5 mt-5\"><strong>Inicio de Sesión</strong></h1>\r\n            <div v-if=\"errors.wrong_credentials\" class=\"form-group col-md-7 flex-column mb-1 mt-3 text-start\">\r\n                <small class=\"text-danger\">{{errors.wrong_credentials}}</small>\r\n            </div>\r\n            <!--Username-->\r\n            <div class=\"form-group col-md-7 flex-column mb-1 mt-3 text-start\">\r\n                <label for=\"username\" class=\"form-label fs-6\"><strong>Nombre de Usuario:</strong></label>\r\n                <input type=\"username\" id=\"username\" name=\"username\" class=\"form-control\" autocomplete=\"off\" v-model=\"username\"/>\r\n                <small v-if=\"errors.username\" class=\"text-danger\">{{errors.username}}</small>\r\n            </div>\r\n            <!--Password-->\r\n            <div class=\"form-group col-md-7 flex-column mt-3 text-start\">\r\n                <label for=\"password\" class=\" form-label fs-6\"><strong>Contraseña:</strong></label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" autocomplete=\"off\" v-model=\"password\"/>\r\n                <small v-if=\"errors.password\" class=\"text-danger\">{{errors.password}}</small>\r\n            </div>\r\n            <!--Button Login-->\r\n            <div class=\"form-group p-3 align-items-center mt-3\">\r\n                <button class=\"btn btn-warning fs-5 text-white\" type=\"submit\">Ingresar</button>\r\n            </div>\r\n            <div class=\"\">\r\n                <p>\r\n                    <router-link class=\"text-decoration-none\" to=\"/signup\">Regístrate aquí.</router-link>\r\n                </p>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import axios from 'axios'\r\n    import { ref } from 'vue'\r\n\r\n    const username = ref(null)\r\n    const password = ref(null)\r\n    const errors = ref({\r\n        username: null,\r\n        password: null,\r\n        wrong_credentials: null\r\n    })\r\n    const valid = ref(true)\r\n\r\n    const isValidForm = () => {\r\n            if(!username.value){\r\n                errors.username.value = \"Este campo no puede estar en blanco\";\r\n            }\r\n            else{\r\n                errors.username.value = \"\";\r\n            }\r\n            if(!password.value){\r\n                errors.password.value = \"Este campo no puede estar en blanco\";\r\n            }\r\n            else{\r\n                errors.password.value = \"\";\r\n            }\r\n            if(errors.username.value || errors.password.value ){\r\n                valid.value = false;\r\n            }\r\n        return valid.value;\r\n    }\r\n\r\n/*    const submitForm = () => {\r\n        if(isValidForm()){\r\n            axios.post('http://127.0.0.1:8000/login/', {username: username.value, password: password.value})\r\n            .then(response => {\r\n                $store.commit('setToken', response.data);\r\n                username.value = \"\";\r\n                password.value = \"\";\r\n                $router.push('/');\r\n                    })\r\n                    .catch(error => {\r\n                        if(error.response.data.non_field_errors) {\r\n                            errors.wrong_credentials.value = error.response.data.non_field_errors.join('');\r\n                        }\r\n                        else{\r\n                            errors.wrong_credentials.value = \"\";\r\n                        }\r\n                    })\r\n                }\r\n    }\r\n*/\r\n</script>"],"mappings":"AAqCI,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,KAAK;;;;;;;IAEzB,MAAMC,QAAQ,GAAGD,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAME,QAAQ,GAAGF,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMG,MAAM,GAAGH,GAAG,CAAC;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdE,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMM,WAAW,GAAGA,CAAA,KAAM;MAClB,IAAG,CAACL,QAAQ,CAACM,KAAK,EAAC;QACfJ,MAAM,CAACF,QAAQ,CAACM,KAAK,GAAG,qCAAqC;MACjE,CAAC,MACG;QACAJ,MAAM,CAACF,QAAQ,CAACM,KAAK,GAAG,EAAE;MAC9B;MACA,IAAG,CAACL,QAAQ,CAACK,KAAK,EAAC;QACfJ,MAAM,CAACD,QAAQ,CAACK,KAAK,GAAG,qCAAqC;MACjE,CAAC,MACG;QACAJ,MAAM,CAACD,QAAQ,CAACK,KAAK,GAAG,EAAE;MAC9B;MACA,IAAGJ,MAAM,CAACF,QAAQ,CAACM,KAAK,IAAIJ,MAAM,CAACD,QAAQ,CAACK,KAAK,EAAE;QAC/CF,KAAK,CAACE,KAAK,GAAG,KAAK;MACvB;MACJ,OAAOF,KAAK,CAACE,KAAK;IACtB,CAAC;;IAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}